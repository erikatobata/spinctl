---
swagger: "2.0"
info:
  title: "Kayenta API"
  contact: {}
host: "spinnaker-kayenta.meteoros.io"
basePath: "/"
tags:
- name: "canary-controller"
  description: "Canary Controller"
- name: "admin-controller"
  description: "Admin Controller"
- name: "metric-set-list-controller"
  description: "Metric Set List Controller"
- name: "metric-set-pair-list-controller"
  description: "Metric Set Pair List Controller"
- name: "pipeline-controller"
  description: "Pipeline Controller"
- name: "credentials-controller"
  description: "Credentials Controller"
- name: "canary-judges-controller"
  description: "Canary Judges Controller"
- name: "stackdriver-fetch-controller"
  description: "Stackdriver Fetch Controller"
- name: "datadog-fetch-controller"
  description: "Datadog Fetch Controller"
- name: "metrics-service-metadata-controller"
  description: "Metrics Service Metadata Controller"
- name: "canary-judge-result-controller"
  description: "Canary Judge Result Controller"
- name: "health-mvc-endpoint"
  description: "Health Mvc Endpoint"
- name: "canary-config-controller"
  description: "Canary Config Controller"
paths:
  /admin/orca/instance/enabled:
    post:
      tags:
      - "admin-controller"
      summary: "setInstanceEnabled"
      operationId: "setInstanceEnabledUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "enabledWrapper"
        description: "enabledWrapper"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "boolean"
        x-exportParamName: "EnabledWrapper"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /canary:
    post:
      tags:
      - "canary-controller"
      summary: "Initiate a canary pipeline with CanaryConfig provided"
      operationId: "initiateCanaryWithConfigUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "metricsAccountName"
        in: "query"
        description: "metricsAccountName"
        required: false
        type: "string"
        x-exportParamName: "MetricsAccountName"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      - in: "body"
        name: "canaryAdhocExecutionRequest"
        description: "canaryAdhocExecutionRequest"
        required: false
        schema:
          $ref: "#/definitions/CanaryAdhocExecutionRequest"
        x-exportParamName: "CanaryAdhocExecutionRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CanaryExecutionResponse"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /canary/executions:
    get:
      tags:
      - "canary-controller"
      summary: "Retrieve a list of an application's canary results"
      operationId: "getCanaryResultsByApplicationUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "query"
        description: "application"
        required: false
        type: "string"
        x-exportParamName: "Application"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      - name: "statuses"
        in: "query"
        description: "statuses"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CanaryExecutionStatusResponse"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /canary/{canaryConfigId}:
    post:
      tags:
      - "canary-controller"
      summary: "Initiate a canary pipeline"
      operationId: "initiateCanaryUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "query"
        description: "application"
        required: false
        type: "string"
        x-exportParamName: "Application"
      - name: "parentPipelineExecutionId"
        in: "query"
        description: "parentPipelineExecutionId"
        required: false
        type: "string"
        x-exportParamName: "ParentPipelineExecutionId"
      - name: "metricsAccountName"
        in: "query"
        description: "metricsAccountName"
        required: false
        type: "string"
        x-exportParamName: "MetricsAccountName"
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      - in: "body"
        name: "canaryExecutionRequest"
        description: "canaryExecutionRequest"
        required: false
        schema:
          $ref: "#/definitions/CanaryExecutionRequest"
        x-exportParamName: "CanaryExecutionRequest"
      - name: "canaryConfigId"
        in: "path"
        description: "canaryConfigId"
        required: true
        type: "string"
        x-exportParamName: "CanaryConfigId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CanaryExecutionResponse"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /canary/{canaryExecutionId}:
    get:
      tags:
      - "canary-controller"
      summary: "Retrieve status and results for a canary run"
      operationId: "getCanaryResultsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      - name: "canaryExecutionId"
        in: "path"
        description: "canaryExecutionId"
        required: true
        type: "string"
        x-exportParamName: "CanaryExecutionId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CanaryExecutionStatusResponse"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /canaryConfig:
    get:
      tags:
      - "canary-config-controller"
      summary: "Retrieve a list of canary config ids and timestamps"
      operationId: "listAllCanaryConfigsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - name: "application"
        in: "query"
        description: "application"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Map«string,object»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "canary-config-controller"
      summary: "Write a canary config to object storage"
      operationId: "storeCanaryConfigUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - in: "body"
        name: "canaryConfig"
        description: "canaryConfig"
        required: true
        schema:
          $ref: "#/definitions/CanaryConfig"
        x-exportParamName: "CanaryConfig"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CanaryConfigUpdateResponse"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /canaryConfig/{canaryConfigId}:
    get:
      tags:
      - "canary-config-controller"
      summary: "Retrieve a canary config from object storage"
      operationId: "loadCanaryConfigUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - name: "canaryConfigId"
        in: "path"
        description: "canaryConfigId"
        required: true
        type: "string"
        x-exportParamName: "CanaryConfigId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CanaryConfig"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    put:
      tags:
      - "canary-config-controller"
      summary: "Update a canary config"
      operationId: "updateCanaryConfigUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - name: "canaryConfigId"
        in: "path"
        description: "canaryConfigId"
        required: true
        type: "string"
        x-exportParamName: "CanaryConfigId"
      - in: "body"
        name: "canaryConfig"
        description: "canaryConfig"
        required: true
        schema:
          $ref: "#/definitions/CanaryConfig"
        x-exportParamName: "CanaryConfig"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CanaryConfigUpdateResponse"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "canary-config-controller"
      summary: "Delete a canary config"
      operationId: "deleteCanaryConfigUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - name: "canaryConfigId"
        in: "path"
        description: "canaryConfigId"
        required: true
        type: "string"
        x-exportParamName: "CanaryConfigId"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /canaryJudgeResult:
    get:
      tags:
      - "canary-judge-result-controller"
      summary: "Retrieve a list of canary judge result ids and timestamps"
      operationId: "listAllCanaryJudgeResultsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Map«string,object»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "canary-judge-result-controller"
      summary: "Write a canary judge result to object storage"
      operationId: "storeCanaryJudgeResultUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - in: "body"
        name: "canaryResult"
        description: "canaryResult"
        required: true
        schema:
          $ref: "#/definitions/CanaryResult"
        x-exportParamName: "CanaryResult"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /canaryJudgeResult/{canaryJudgeResultId}:
    get:
      tags:
      - "canary-judge-result-controller"
      summary: "Retrieve a canary judge result from object storage"
      operationId: "loadCanaryJudgeResultUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - name: "canaryJudgeResultId"
        in: "path"
        description: "canaryJudgeResultId"
        required: true
        type: "string"
        x-exportParamName: "CanaryJudgeResultId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CanaryResult"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "canary-judge-result-controller"
      summary: "Delete a canary judge result"
      operationId: "deleteCanaryJudgeResultUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - name: "canaryJudgeResultId"
        in: "path"
        description: "canaryJudgeResultId"
        required: true
        type: "string"
        x-exportParamName: "CanaryJudgeResultId"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /credentials:
    get:
      tags:
      - "credentials-controller"
      summary: "Retrieve a list of all configured credentials"
      operationId: "listUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AccountCredentials"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /fetch/datadog/query:
    post:
      tags:
      - "datadog-fetch-controller"
      summary: "queryMetrics"
      operationId: "queryMetricsUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "metricsAccountName"
        in: "query"
        description: "metricsAccountName"
        required: false
        type: "string"
        x-exportParamName: "MetricsAccountName"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      - name: "metricSetName"
        in: "query"
        description: "metricSetName"
        required: false
        type: "string"
        default: "cpu"
        x-exportParamName: "MetricSetName"
      - name: "metricName"
        in: "query"
        description: "metricName"
        required: false
        type: "string"
        default: "avg:system.cpu.user"
        x-exportParamName: "MetricName"
      - name: "scope"
        in: "query"
        description: "The scope of the Datadog query. e.g. autoscaling_group:myapp-prod-v002"
        required: false
        type: "string"
        x-exportParamName: "Scope"
      - name: "start"
        in: "query"
        description: "An ISO format timestamp, e.g.: 2018-03-15T01:23:45Z"
        required: false
        type: "string"
        x-exportParamName: "Start"
      - name: "end"
        in: "query"
        description: "An ISO format timestamp, e.g.: 2018-03-15T01:23:45Z"
        required: false
        type: "string"
        x-exportParamName: "End"
      - name: "step"
        in: "query"
        description: "seconds"
        required: false
        type: "integer"
        default: 60
        format: "int64"
        x-exportParamName: "Step"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /fetch/stackdriver/query:
    post:
      tags:
      - "stackdriver-fetch-controller"
      summary: "Exercise the Stackdriver Metrics Service directly, without any orchestration\
        \ or judging"
      operationId: "queryMetricsUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "metricsAccountName"
        in: "query"
        description: "metricsAccountName"
        required: false
        type: "string"
        x-exportParamName: "MetricsAccountName"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      - name: "metricSetName"
        in: "query"
        description: "metricSetName"
        required: false
        type: "string"
        default: "cpu"
        x-exportParamName: "MetricSetName"
      - name: "metricType"
        in: "query"
        description: "metricType"
        required: false
        type: "string"
        default: "compute.googleapis.com/instance/cpu/utilization"
        x-exportParamName: "MetricType"
      - name: "groupByFields"
        in: "query"
        description: "groupByFields"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "GroupByFields"
      - name: "project"
        in: "query"
        description: "project"
        required: false
        type: "string"
        x-exportParamName: "Project"
      - name: "resourceType"
        in: "query"
        description: "Used to identify the type of the resource being queried, e.g.\
          \ aws_ec2_instance, gce_instance."
        required: false
        type: "string"
        x-exportParamName: "ResourceType"
      - name: "location"
        in: "query"
        description: "The location to use when scoping the query. Valid choices depend\
          \ on what cloud platform the query relates to (could be a region, a namespace,\
          \ or something else)."
        required: false
        type: "string"
        x-exportParamName: "Location"
      - name: "scope"
        in: "query"
        description: "The name of the resource to use when scoping the query. The\
          \ most common use-case is to provide a server group name."
        required: false
        type: "string"
        x-exportParamName: "Scope"
      - name: "startTimeIso"
        in: "query"
        description: "An ISO format timestamp, e.g.: 2018-02-21T12:48:00Z"
        required: false
        type: "string"
        x-exportParamName: "StartTimeIso"
      - name: "endTimeIso"
        in: "query"
        description: "An ISO format timestamp, e.g.: 2018-02-21T12:51:00Z"
        required: false
        type: "string"
        x-exportParamName: "EndTimeIso"
      - name: "step"
        in: "query"
        description: "seconds"
        required: false
        type: "integer"
        default: 60
        format: "int64"
        x-exportParamName: "Step"
      - name: "customFilter"
        in: "query"
        description: "customFilter"
        required: false
        type: "string"
        x-exportParamName: "CustomFilter"
      - in: "body"
        name: "extendedScopeParams"
        description: "extendedScopeParams"
        required: false
        schema:
          type: "object"
          additionalProperties:
            type: "string"
        x-exportParamName: "ExtendedScopeParams"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /health:
    get:
      tags:
      - "health-mvc-endpoint"
      summary: "invoke"
      operationId: "invokeUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/vnd.spring-boot.actuator.v1+json"
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /judges:
    get:
      tags:
      - "canary-judges-controller"
      summary: "Retrieve a list of all configured canary judges"
      operationId: "listUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CanaryJudge"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /metadata/metricsService:
    get:
      tags:
      - "metrics-service-metadata-controller"
      summary: "Retrieve a list of descriptors for use in populating the canary config\
        \ ui"
      operationId: "listMetadataUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "metricsAccountName"
        in: "query"
        description: "metricsAccountName"
        required: false
        type: "string"
        x-exportParamName: "MetricsAccountName"
      - name: "filter"
        in: "query"
        description: "filter"
        required: false
        type: "string"
        x-exportParamName: "Filter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Map"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /metricSetList:
    get:
      tags:
      - "metric-set-list-controller"
      summary: "Retrieve a list of metric set list ids and timestamps"
      operationId: "listAllMetricSetListsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Map«string,object»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "metric-set-list-controller"
      summary: "Write a metric set list to object storage"
      operationId: "storeMetricSetListUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - in: "body"
        name: "metricSetList"
        description: "metricSetList"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/MetricSet"
        x-exportParamName: "MetricSetList"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /metricSetList/{metricSetListId}:
    get:
      tags:
      - "metric-set-list-controller"
      summary: "Retrieve a metric set list from object storage"
      operationId: "loadMetricSetListUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - name: "metricSetListId"
        in: "path"
        description: "metricSetListId"
        required: true
        type: "string"
        x-exportParamName: "MetricSetListId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetricSet"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "metric-set-list-controller"
      summary: "Delete a metric set list"
      operationId: "deleteMetricSetListUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - name: "metricSetListId"
        in: "path"
        description: "metricSetListId"
        required: true
        type: "string"
        x-exportParamName: "MetricSetListId"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /metricSetPairList:
    get:
      tags:
      - "metric-set-pair-list-controller"
      summary: "Retrieve a list of metric set pair list ids and timestamps"
      operationId: "listAllMetricSetPairListsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Map«string,object»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "metric-set-pair-list-controller"
      summary: "Write a metric set pair list to object storage"
      operationId: "storeMetricSetPairListUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - in: "body"
        name: "metricSetPairList"
        description: "metricSetPairList"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/MetricSetPair"
        x-exportParamName: "MetricSetPairList"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /metricSetPairList/{metricSetPairListId}:
    get:
      tags:
      - "metric-set-pair-list-controller"
      summary: "Retrieve a metric set pair list from object storage"
      operationId: "loadMetricSetPairListUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - name: "metricSetPairListId"
        in: "path"
        description: "metricSetPairListId"
        required: true
        type: "string"
        x-exportParamName: "MetricSetPairListId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MetricSetPair"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "metric-set-pair-list-controller"
      summary: "Delete a metric set pair list"
      operationId: "deleteMetricSetPairListUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - name: "metricSetPairListId"
        in: "path"
        description: "metricSetPairListId"
        required: true
        type: "string"
        x-exportParamName: "MetricSetPairListId"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /metricSetPairList/{metricSetPairListId}/{metricSetPairId}:
    get:
      tags:
      - "metric-set-pair-list-controller"
      summary: "Retrieve a single metric set pair from a metricSetPairList from object\
        \ storage"
      operationId: "loadMetricSetPairUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "accountName"
        in: "query"
        description: "accountName"
        required: false
        type: "string"
        x-exportParamName: "AccountName"
      - name: "metricSetPairListId"
        in: "path"
        description: "metricSetPairListId"
        required: true
        type: "string"
        x-exportParamName: "MetricSetPairListId"
      - name: "metricSetPairId"
        in: "path"
        description: "metricSetPairId"
        required: true
        type: "string"
        x-exportParamName: "MetricSetPairId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MetricSetPair"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/start:
    post:
      tags:
      - "pipeline-controller"
      summary: "Initiate a pipeline execution"
      operationId: "startUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "map"
        description: "map"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Map_"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{executionId}:
    get:
      tags:
      - "pipeline-controller"
      summary: "Retrieve a pipeline execution"
      operationId: "getPipelineUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "executionId"
        in: "path"
        description: "executionId"
        required: true
        type: "string"
        x-exportParamName: "ExecutionId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Execution"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{executionId}/cancel:
    put:
      tags:
      - "pipeline-controller"
      summary: "Cancel a pipeline execution"
      operationId: "cancelUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "executionId"
        in: "path"
        description: "executionId"
        required: true
        type: "string"
        x-exportParamName: "ExecutionId"
      responses:
        201:
          description: "Created"
        202:
          description: "Accepted"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
definitions:
  AccountCredentials:
    type: "object"
    properties:
      name:
        type: "string"
      supportedTypes:
        type: "array"
        items:
          type: "string"
          enum:
          - "METRICS_STORE"
          - "OBJECT_STORE"
          - "CONFIGURATION_STORE"
      type:
        type: "string"
  Artifact:
    type: "object"
    properties:
      artifactAccount:
        type: "string"
      location:
        type: "string"
      metadata:
        type: "object"
        properties: {}
      name:
        type: "string"
      provenance:
        type: "string"
      reference:
        type: "string"
      type:
        type: "string"
      uuid:
        type: "string"
      version:
        type: "string"
  AuthenticationDetails:
    type: "object"
    properties:
      allowedAccounts:
        type: "array"
        items:
          type: "string"
      user:
        type: "string"
  CanaryAdhocExecutionRequest:
    type: "object"
    properties:
      canaryConfig:
        $ref: "#/definitions/CanaryConfig"
      executionRequest:
        $ref: "#/definitions/CanaryExecutionRequest"
    example:
      canaryConfig:
        configVersion: "configVersion"
        createdTimestamp: 5
        createdTimestampIso: "createdTimestampIso"
        templates:
          key: "templates"
        updatedTimestampIso: "updatedTimestampIso"
        classifier:
          scoreThresholds:
            pass: 1.4658129805029452
            marginal: 6.027456183070403
          groupWeights:
            key: 0.8008281904610115
        name: "name"
        description: "description"
        judge:
          judgeConfigurations: "{}"
          name: "name"
        metrics:
        - query:
            serviceType: "serviceType"
            customFilter: "customFilter"
            customFilterTemplate: "customFilterTemplate"
          scopeName: "scopeName"
          analysisConfigurations:
            key:
              key: "{}"
          name: "name"
          groups:
          - "groups"
          - "groups"
        - query:
            serviceType: "serviceType"
            customFilter: "customFilter"
            customFilterTemplate: "customFilterTemplate"
          scopeName: "scopeName"
          analysisConfigurations:
            key:
              key: "{}"
          name: "name"
          groups:
          - "groups"
          - "groups"
        updatedTimestamp: 5
        applications:
        - "applications"
        - "applications"
      executionRequest:
        metadata:
        - hidden: true
          name: "name"
          value: "value"
        - hidden: true
          name: "name"
          value: "value"
        thresholds:
          pass: 1.4658129805029452
          marginal: 6.027456183070403
        scopes:
          key:
            controlScope:
              extendedScopeParams:
                key: "extendedScopeParams"
              scope: "scope"
              start: "2000-01-23T04:56:07.000+00:00"
              end: "2000-01-23T04:56:07.000+00:00"
              location: "location"
              step: 2
            experimentScope:
              extendedScopeParams:
                key: "extendedScopeParams"
              scope: "scope"
              start: "2000-01-23T04:56:07.000+00:00"
              end: "2000-01-23T04:56:07.000+00:00"
              location: "location"
              step: 2
        siteLocal: "{}"
  CanaryAnalysisResult:
    type: "object"
    properties:
      classification:
        type: "string"
      classificationReason:
        type: "string"
      controlMetadata:
        type: "object"
        properties: {}
      critical:
        type: "boolean"
      experimentMetadata:
        type: "object"
        properties: {}
      groups:
        type: "array"
        items:
          type: "string"
      id:
        type: "string"
      name:
        type: "string"
      resultMetadata:
        type: "object"
        properties: {}
      tags:
        type: "object"
        additionalProperties:
          type: "string"
    example:
      classificationReason: "classificationReason"
      resultMetadata: "{}"
      critical: true
      experimentMetadata: "{}"
      name: "name"
      groups:
      - "groups"
      - "groups"
      controlMetadata: "{}"
      id: "id"
      classification: "classification"
      tags:
        key: "tags"
  CanaryClassifierConfig:
    type: "object"
    properties:
      groupWeights:
        type: "object"
        additionalProperties:
          type: "number"
          format: "double"
      scoreThresholds:
        $ref: "#/definitions/CanaryClassifierThresholdsConfig"
    example:
      scoreThresholds:
        pass: 1.4658129805029452
        marginal: 6.027456183070403
      groupWeights:
        key: 0.8008281904610115
  CanaryClassifierThresholdsConfig:
    type: "object"
    properties:
      marginal:
        type: "number"
        format: "double"
      pass:
        type: "number"
        format: "double"
    example:
      pass: 1.4658129805029452
      marginal: 6.027456183070403
  CanaryConfig:
    type: "object"
    properties:
      applications:
        type: "array"
        items:
          type: "string"
      classifier:
        $ref: "#/definitions/CanaryClassifierConfig"
      configVersion:
        type: "string"
      createdTimestamp:
        type: "integer"
        format: "int64"
      createdTimestampIso:
        type: "string"
      description:
        type: "string"
      judge:
        $ref: "#/definitions/CanaryJudgeConfig"
      metrics:
        type: "array"
        items:
          $ref: "#/definitions/CanaryMetricConfig"
      name:
        type: "string"
      templates:
        type: "object"
        additionalProperties:
          type: "string"
      updatedTimestamp:
        type: "integer"
        format: "int64"
      updatedTimestampIso:
        type: "string"
    example:
      configVersion: "configVersion"
      createdTimestamp: 5
      createdTimestampIso: "createdTimestampIso"
      templates:
        key: "templates"
      updatedTimestampIso: "updatedTimestampIso"
      classifier:
        scoreThresholds:
          pass: 1.4658129805029452
          marginal: 6.027456183070403
        groupWeights:
          key: 0.8008281904610115
      name: "name"
      description: "description"
      judge:
        judgeConfigurations: "{}"
        name: "name"
      metrics:
      - query:
          serviceType: "serviceType"
          customFilter: "customFilter"
          customFilterTemplate: "customFilterTemplate"
        scopeName: "scopeName"
        analysisConfigurations:
          key:
            key: "{}"
        name: "name"
        groups:
        - "groups"
        - "groups"
      - query:
          serviceType: "serviceType"
          customFilter: "customFilter"
          customFilterTemplate: "customFilterTemplate"
        scopeName: "scopeName"
        analysisConfigurations:
          key:
            key: "{}"
        name: "name"
        groups:
        - "groups"
        - "groups"
      updatedTimestamp: 5
      applications:
      - "applications"
      - "applications"
  CanaryConfigUpdateResponse:
    type: "object"
    properties:
      canaryConfigId:
        type: "string"
  CanaryExecutionRequest:
    type: "object"
    properties:
      metadata:
        type: "array"
        items:
          $ref: "#/definitions/Metadata"
      scopes:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/CanaryScopePair"
      siteLocal:
        type: "object"
        properties: {}
      thresholds:
        $ref: "#/definitions/CanaryClassifierThresholdsConfig"
    example:
      metadata:
      - hidden: true
        name: "name"
        value: "value"
      - hidden: true
        name: "name"
        value: "value"
      thresholds:
        pass: 1.4658129805029452
        marginal: 6.027456183070403
      scopes:
        key:
          controlScope:
            extendedScopeParams:
              key: "extendedScopeParams"
            scope: "scope"
            start: "2000-01-23T04:56:07.000+00:00"
            end: "2000-01-23T04:56:07.000+00:00"
            location: "location"
            step: 2
          experimentScope:
            extendedScopeParams:
              key: "extendedScopeParams"
            scope: "scope"
            start: "2000-01-23T04:56:07.000+00:00"
            end: "2000-01-23T04:56:07.000+00:00"
            location: "location"
            step: 2
      siteLocal: "{}"
  CanaryExecutionResponse:
    type: "object"
    properties:
      canaryExecutionId:
        type: "string"
  CanaryExecutionStatusResponse:
    type: "object"
    properties:
      application:
        type: "string"
      buildTimeIso:
        type: "string"
      buildTimeMillis:
        type: "integer"
        format: "int64"
      canaryConfigId:
        type: "string"
      canaryExecutionRequest:
        $ref: "#/definitions/CanaryExecutionRequest"
      complete:
        type: "boolean"
      config:
        $ref: "#/definitions/CanaryConfig"
      configurationAccountName:
        type: "string"
      endTimeIso:
        type: "string"
      endTimeMillis:
        type: "integer"
        format: "int64"
      exception:
        type: "object"
        properties: {}
      metricSetPairListId:
        type: "string"
      parentPipelineExecutionId:
        type: "string"
      pipelineId:
        type: "string"
      result:
        $ref: "#/definitions/CanaryResult"
      stageStatus:
        type: "object"
        additionalProperties:
          type: "string"
      startTimeIso:
        type: "string"
      startTimeMillis:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      storageAccountName:
        type: "string"
  CanaryJudge:
    type: "object"
    properties:
      name:
        type: "string"
      visible:
        type: "boolean"
  CanaryJudgeConfig:
    type: "object"
    properties:
      judgeConfigurations:
        type: "object"
        properties: {}
      name:
        type: "string"
    example:
      judgeConfigurations: "{}"
      name: "name"
  CanaryJudgeGroupScore:
    type: "object"
    properties:
      classification:
        type: "string"
      classificationReason:
        type: "string"
      name:
        type: "string"
      score:
        type: "number"
        format: "double"
    example:
      classificationReason: "classificationReason"
      score: 1.4658129805029452
      name: "name"
      classification: "classification"
  CanaryJudgeResult:
    type: "object"
    properties:
      groupScores:
        type: "array"
        items:
          $ref: "#/definitions/CanaryJudgeGroupScore"
      judgeName:
        type: "string"
      results:
        type: "array"
        items:
          $ref: "#/definitions/CanaryAnalysisResult"
      score:
        $ref: "#/definitions/CanaryJudgeScore"
    example:
      groupScores:
      - classificationReason: "classificationReason"
        score: 1.4658129805029452
        name: "name"
        classification: "classification"
      - classificationReason: "classificationReason"
        score: 1.4658129805029452
        name: "name"
        classification: "classification"
      score:
        classificationReason: "classificationReason"
        score: 5.962133916683182
        classification: "classification"
      judgeName: "judgeName"
      results:
      - classificationReason: "classificationReason"
        resultMetadata: "{}"
        critical: true
        experimentMetadata: "{}"
        name: "name"
        groups:
        - "groups"
        - "groups"
        controlMetadata: "{}"
        id: "id"
        classification: "classification"
        tags:
          key: "tags"
      - classificationReason: "classificationReason"
        resultMetadata: "{}"
        critical: true
        experimentMetadata: "{}"
        name: "name"
        groups:
        - "groups"
        - "groups"
        controlMetadata: "{}"
        id: "id"
        classification: "classification"
        tags:
          key: "tags"
  CanaryJudgeScore:
    type: "object"
    properties:
      classification:
        type: "string"
      classificationReason:
        type: "string"
      score:
        type: "number"
        format: "double"
    example:
      classificationReason: "classificationReason"
      score: 5.962133916683182
      classification: "classification"
  CanaryMetricConfig:
    type: "object"
    properties:
      analysisConfigurations:
        type: "object"
        additionalProperties:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
      groups:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
      query:
        $ref: "#/definitions/CanaryMetricSetQueryConfig"
      scopeName:
        type: "string"
    example:
      query:
        serviceType: "serviceType"
        customFilter: "customFilter"
        customFilterTemplate: "customFilterTemplate"
      scopeName: "scopeName"
      analysisConfigurations:
        key:
          key: "{}"
      name: "name"
      groups:
      - "groups"
      - "groups"
  CanaryMetricSetQueryConfig:
    type: "object"
    properties:
      customFilter:
        type: "string"
      customFilterTemplate:
        type: "string"
      serviceType:
        type: "string"
    example:
      serviceType: "serviceType"
      customFilter: "customFilter"
      customFilterTemplate: "customFilterTemplate"
  CanaryResult:
    type: "object"
    properties:
      canaryDuration:
        $ref: "#/definitions/Duration"
      judgeResult:
        $ref: "#/definitions/CanaryJudgeResult"
    example:
      judgeResult:
        groupScores:
        - classificationReason: "classificationReason"
          score: 1.4658129805029452
          name: "name"
          classification: "classification"
        - classificationReason: "classificationReason"
          score: 1.4658129805029452
          name: "name"
          classification: "classification"
        score:
          classificationReason: "classificationReason"
          score: 5.962133916683182
          classification: "classification"
        judgeName: "judgeName"
        results:
        - classificationReason: "classificationReason"
          resultMetadata: "{}"
          critical: true
          experimentMetadata: "{}"
          name: "name"
          groups:
          - "groups"
          - "groups"
          controlMetadata: "{}"
          id: "id"
          classification: "classification"
          tags:
            key: "tags"
        - classificationReason: "classificationReason"
          resultMetadata: "{}"
          critical: true
          experimentMetadata: "{}"
          name: "name"
          groups:
          - "groups"
          - "groups"
          controlMetadata: "{}"
          id: "id"
          classification: "classification"
          tags:
            key: "tags"
      canaryDuration:
        zero: true
        negative: true
        seconds: 6
        nano: 0
        units:
        - duration: null
          durationEstimated: true
          timeBased: true
          dateBased: true
        - duration: null
          durationEstimated: true
          timeBased: true
          dateBased: true
  CanaryScope:
    type: "object"
    properties:
      end:
        type: "string"
        format: "date-time"
      extendedScopeParams:
        type: "object"
        additionalProperties:
          type: "string"
      location:
        type: "string"
      scope:
        type: "string"
      start:
        type: "string"
        format: "date-time"
      step:
        type: "integer"
        format: "int64"
    example:
      extendedScopeParams:
        key: "extendedScopeParams"
      scope: "scope"
      start: "2000-01-23T04:56:07.000+00:00"
      end: "2000-01-23T04:56:07.000+00:00"
      location: "location"
      step: 2
  CanaryScopePair:
    type: "object"
    properties:
      controlScope:
        $ref: "#/definitions/CanaryScope"
      experimentScope:
        $ref: "#/definitions/CanaryScope"
    example:
      controlScope:
        extendedScopeParams:
          key: "extendedScopeParams"
        scope: "scope"
        start: "2000-01-23T04:56:07.000+00:00"
        end: "2000-01-23T04:56:07.000+00:00"
        location: "location"
        step: 2
      experimentScope:
        extendedScopeParams:
          key: "extendedScopeParams"
        scope: "scope"
        start: "2000-01-23T04:56:07.000+00:00"
        end: "2000-01-23T04:56:07.000+00:00"
        location: "location"
        step: 2
  Duration:
    type: "object"
    properties:
      nano:
        type: "integer"
        format: "int32"
      negative:
        type: "boolean"
      seconds:
        type: "integer"
        format: "int64"
      units:
        type: "array"
        items:
          $ref: "#/definitions/TemporalUnit"
      zero:
        type: "boolean"
    example:
      zero: true
      negative: true
      seconds: 6
      nano: 0
      units:
      - duration: null
        durationEstimated: true
        timeBased: true
        dateBased: true
      - duration: null
        durationEstimated: true
        timeBased: true
        dateBased: true
  Execution:
    type: "object"
    properties:
      application:
        type: "string"
      authentication:
        $ref: "#/definitions/AuthenticationDetails"
      buildTime:
        type: "integer"
        format: "int64"
      canceled:
        type: "boolean"
      canceledBy:
        type: "string"
      cancellationReason:
        type: "string"
      description:
        type: "string"
      endTime:
        type: "integer"
        format: "int64"
      id:
        type: "string"
      initialConfig:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Serializable"
      keepWaitingPipelines:
        type: "boolean"
      limitConcurrent:
        type: "boolean"
      name:
        type: "string"
      notifications:
        type: "array"
        items:
          $ref: "#/definitions/Map«string,object»"
      origin:
        type: "string"
      paused:
        $ref: "#/definitions/PausedDetails"
      pipelineConfigId:
        type: "string"
      stages:
        type: "array"
        items:
          $ref: "#/definitions/Stage"
      startTime:
        type: "integer"
        format: "int64"
      startTimeTtl:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "NOT_STARTED"
        - "RUNNING"
        - "PAUSED"
        - "SUSPENDED"
        - "SUCCEEDED"
        - "FAILED_CONTINUE"
        - "TERMINAL"
        - "CANCELED"
        - "REDIRECT"
        - "STOPPED"
        - "SKIPPED"
      trigger:
        $ref: "#/definitions/Trigger"
      type:
        type: "string"
        enum:
        - "pipeline"
        - "orchestration"
  ExpectedArtifact:
    type: "object"
    properties:
      boundArtifact:
        $ref: "#/definitions/Artifact"
      defaultArtifact:
        $ref: "#/definitions/Artifact"
      id:
        type: "string"
      matchArtifact:
        $ref: "#/definitions/Artifact"
      useDefaultArtifact:
        type: "boolean"
      usePriorArtifact:
        type: "boolean"
  LastModifiedDetails:
    type: "object"
    properties:
      allowedAccounts:
        type: "array"
        items:
          type: "string"
      lastModifiedTime:
        type: "integer"
        format: "int64"
      user:
        type: "string"
  Map:
    type: "object"
    additionalProperties:
      type: "object"
      properties: {}
  Map«string,object»:
    type: "object"
    additionalProperties:
      type: "object"
      properties: {}
  Map«string,string»:
    type: "object"
    additionalProperties:
      type: "string"
  Metadata:
    type: "object"
    properties:
      hidden:
        type: "boolean"
      name:
        type: "string"
      value:
        type: "string"
    example:
      hidden: true
      name: "name"
      value: "value"
  MetricSet:
    type: "object"
    properties:
      attributes:
        type: "object"
        additionalProperties:
          type: "string"
      name:
        type: "string"
      startTimeIso:
        type: "string"
      startTimeMillis:
        type: "integer"
        format: "int64"
      stepMillis:
        type: "integer"
        format: "int64"
      tags:
        type: "object"
        additionalProperties:
          type: "string"
      values:
        type: "array"
        items:
          type: "number"
          format: "double"
  MetricSetPair:
    type: "object"
    properties:
      attributes:
        type: "object"
        additionalProperties:
          type: "object"
          additionalProperties:
            type: "string"
      id:
        type: "string"
      name:
        type: "string"
      scopes:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/MetricSetScope"
      tags:
        type: "object"
        additionalProperties:
          type: "string"
      values:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "number"
            format: "double"
  MetricSetScope:
    type: "object"
    properties:
      startTimeIso:
        type: "string"
      startTimeMillis:
        type: "integer"
        format: "int64"
      stepMillis:
        type: "integer"
        format: "int64"
  PausedDetails:
    type: "object"
    properties:
      pauseTime:
        type: "integer"
        format: "int64"
      pausedBy:
        type: "string"
      resumeTime:
        type: "integer"
        format: "int64"
      resumedBy:
        type: "string"
  Serializable:
    type: "object"
  Stage:
    type: "object"
    properties:
      context:
        type: "object"
        properties: {}
      endTime:
        type: "integer"
        format: "int64"
      execution:
        $ref: "#/definitions/Execution"
      id:
        type: "string"
      lastModified:
        $ref: "#/definitions/LastModifiedDetails"
      name:
        type: "string"
      outputs:
        type: "object"
        properties: {}
      parentStageId:
        type: "string"
      refId:
        type: "string"
      requisiteStageRefIds:
        type: "array"
        items:
          type: "string"
      scheduledTime:
        type: "integer"
        format: "int64"
      startTime:
        type: "integer"
        format: "int64"
      startTimeTtl:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "NOT_STARTED"
        - "RUNNING"
        - "PAUSED"
        - "SUSPENDED"
        - "SUCCEEDED"
        - "FAILED_CONTINUE"
        - "TERMINAL"
        - "CANCELED"
        - "REDIRECT"
        - "STOPPED"
        - "SKIPPED"
      syntheticStageOwner:
        type: "string"
        enum:
        - "STAGE_BEFORE"
        - "STAGE_AFTER"
      tasks:
        type: "array"
        items:
          $ref: "#/definitions/Task"
      type:
        type: "string"
  Task:
    type: "object"
    properties:
      endTime:
        type: "integer"
        format: "int64"
      id:
        type: "string"
      implementingClass:
        type: "string"
      loopEnd:
        type: "boolean"
      loopStart:
        type: "boolean"
      name:
        type: "string"
      stageEnd:
        type: "boolean"
      stageStart:
        type: "boolean"
      startTime:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        enum:
        - "NOT_STARTED"
        - "RUNNING"
        - "PAUSED"
        - "SUSPENDED"
        - "SUCCEEDED"
        - "FAILED_CONTINUE"
        - "TERMINAL"
        - "CANCELED"
        - "REDIRECT"
        - "STOPPED"
        - "SKIPPED"
  TemporalUnit:
    type: "object"
    properties:
      dateBased:
        type: "boolean"
      duration:
        $ref: "#/definitions/Duration"
      durationEstimated:
        type: "boolean"
      timeBased:
        type: "boolean"
    example:
      duration: null
      durationEstimated: true
      timeBased: true
      dateBased: true
  Trigger:
    type: "object"
    properties:
      artifacts:
        type: "array"
        items:
          $ref: "#/definitions/Artifact"
      correlationId:
        type: "string"
      dryRun:
        type: "boolean"
      notifications:
        type: "array"
        items:
          $ref: "#/definitions/Map«string,object»"
      parameters:
        type: "object"
        properties: {}
      rebake:
        type: "boolean"
      resolvedExpectedArtifacts:
        type: "array"
        items:
          $ref: "#/definitions/ExpectedArtifact"
      strategy:
        type: "boolean"
      type:
        type: "string"
      user:
        type: "string"
