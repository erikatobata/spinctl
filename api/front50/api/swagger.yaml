---
swagger: "2.0"
info:
  title: "Spinnaker Front50 API"
  contact: {}
host: "spinnaker-front50.example.com"
basePath: "/"
tags:
- name: "notification-controller"
  description: "Notification Controller"
- name: "entity-tags-controller"
  description: "Entity Tags Controller"
- name: "applications-controller"
  description: "Application API"
- name: "credentials-controller"
  description: "Credential API"
- name: "pipeline-controller"
  description: "Pipeline Controller"
- name: "projects-controller"
  description: "Project API"
- name: "strategy-controller"
  description: "Strategy Controller"
paths:
  /credentials:
    get:
      tags:
      - "credentials-controller"
      summary: "list"
      description: "Fetch all account details"
      operationId: "listUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Map"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /notifications:
    get:
      tags:
      - "notification-controller"
      summary: "list"
      operationId: "listUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Notification"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /notifications/batchUpdate:
    post:
      tags:
      - "notification-controller"
      summary: "batchUpdate"
      operationId: "batchUpdateUsingPOST_2"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "notifications"
        description: "notifications"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Notification"
        x-exportParamName: "Notifications"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /notifications/global:
    get:
      tags:
      - "notification-controller"
      summary: "getGlobal"
      operationId: "getGlobalUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "notification-controller"
      summary: "saveGlobal"
      operationId: "saveGlobalUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "notification"
        description: "notification"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
        x-exportParamName: "Notification"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /notifications/{type}/{name}:
    get:
      tags:
      - "notification-controller"
      summary: "listByApplication"
      operationId: "listByApplicationUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "type"
        in: "path"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "notification-controller"
      summary: "save"
      operationId: "saveUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "type"
        in: "path"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "notification"
        description: "notification"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
        x-exportParamName: "Notification"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "notification-controller"
      summary: "delete"
      operationId: "deleteUsingDELETE_2"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "type"
        in: "path"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /pipelines:
    get:
      tags:
      - "pipeline-controller"
      summary: "list"
      operationId: "listUsingGET_2"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "restricted"
        in: "query"
        description: "restricted"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Restricted"
      - name: "refresh"
        in: "query"
        description: "refresh"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Refresh"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pipeline"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "pipeline-controller"
      summary: "save"
      operationId: "saveUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "pipeline"
        description: "pipeline"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
        x-exportParamName: "Pipeline"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/batchUpdate:
    post:
      tags:
      - "pipeline-controller"
      summary: "batchUpdate"
      operationId: "batchUpdateUsingPOST_3"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "pipelines"
        description: "pipelines"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Pipeline"
        x-exportParamName: "Pipelines"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{application}:
    get:
      tags:
      - "pipeline-controller"
      summary: "listByApplication"
      operationId: "listByApplicationUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "refresh"
        in: "query"
        description: "refresh"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Refresh"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pipeline"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{application}/{pipeline}:
    delete:
      tags:
      - "pipeline-controller"
      summary: "delete"
      operationId: "deleteUsingDELETE_3"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipeline"
        in: "path"
        description: "pipeline"
        required: true
        type: "string"
        x-exportParamName: "Pipeline"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /pipelines/{id}:
    put:
      tags:
      - "pipeline-controller"
      summary: "update"
      operationId: "updateUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "pipeline"
        description: "pipeline"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
        x-exportParamName: "Pipeline"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/history:
    get:
      tags:
      - "pipeline-controller"
      summary: "getHistory"
      operationId: "getHistoryUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pipeline"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /strategies:
    get:
      tags:
      - "strategy-controller"
      summary: "list"
      operationId: "listUsingGET_3"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pipeline"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "strategy-controller"
      summary: "save"
      operationId: "saveUsingPOST_2"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "strategy"
        description: "strategy"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
        x-exportParamName: "Strategy"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /strategies/batchUpdate:
    post:
      tags:
      - "strategy-controller"
      summary: "batchUpdate"
      operationId: "batchUpdateUsingPOST_5"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "strategies"
        description: "strategies"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Pipeline"
        x-exportParamName: "Strategies"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /strategies/{application}:
    get:
      tags:
      - "strategy-controller"
      summary: "listByApplication"
      operationId: "listByApplicationUsingGET_2"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pipeline"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /strategies/{application}/{strategy}:
    delete:
      tags:
      - "strategy-controller"
      summary: "delete"
      operationId: "deleteUsingDELETE_5"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "strategy"
        in: "path"
        description: "strategy"
        required: true
        type: "string"
        x-exportParamName: "Strategy"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /strategies/{id}:
    put:
      tags:
      - "strategy-controller"
      summary: "update"
      operationId: "updateUsingPUT_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "strategy"
        description: "strategy"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "object"
            properties: {}
        x-exportParamName: "Strategy"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /strategies/{id}/history:
    get:
      tags:
      - "strategy-controller"
      summary: "getHistory"
      operationId: "getHistoryUsingGET_2"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pipeline"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/applications:
    get:
      tags:
      - "applications-controller"
      summary: "applications"
      description: "Fetch all applications.\n\n    Supports filtering by one or more\
        \ attributes:\n    - ?email=my@email.com\n    - ?email=my@email.com&name=flex"
      operationId: "applicationsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "pageSize"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageSize"
      - name: "params"
        in: "query"
        description: "params"
        required: true
        x-exportParamName: "Params"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Application"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "applications-controller"
      summary: "create"
      description: "Create an application"
      operationId: "createUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "app"
        description: "app"
        required: true
        schema:
          $ref: "#/definitions/Application"
        x-exportParamName: "App"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Application"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/applications/batch/applications:
    post:
      tags:
      - "applications-controller"
      summary: "batchUpdate"
      operationId: "batchUpdateUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "applications"
        description: "applications"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Application"
        x-exportParamName: "Applications"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/applications/{applicationName}:
    get:
      tags:
      - "applications-controller"
      summary: "get"
      description: "Fetch a single application by name"
      operationId: "getUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Application"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "applications-controller"
      summary: "delete"
      description: "Delete an application"
      operationId: "deleteUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    patch:
      tags:
      - "applications-controller"
      summary: "update"
      description: "Update an existing application"
      operationId: "updateUsingPATCH"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - in: "body"
        name: "app"
        description: "app"
        required: true
        schema:
          $ref: "#/definitions/Application"
        x-exportParamName: "App"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Application"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /v2/applications/{applicationName}/history:
    get:
      tags:
      - "applications-controller"
      summary: "getHistory"
      operationId: "getHistoryUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Application"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/projects:
    get:
      tags:
      - "projects-controller"
      summary: "projects"
      description: "Fetch all projects.\n\n    Support filtering by one or more attributes:\n\
        \    - ?name=projectName\n    - ?email=my@email.com"
      operationId: "projectsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "pageSize"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PageSize"
      - name: "params"
        in: "query"
        description: "params"
        required: true
        x-exportParamName: "Params"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "projects-controller"
      summary: "create"
      description: "Create a project"
      operationId: "createUsingPOST_2"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "project"
        description: "project"
        required: true
        schema:
          $ref: "#/definitions/Project"
        x-exportParamName: "Project"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Project"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/projects/batchUpdate:
    post:
      tags:
      - "projects-controller"
      summary: "batchUpdate"
      operationId: "batchUpdateUsingPOST_4"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "projects"
        description: "projects"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Project"
        x-exportParamName: "Projects"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/projects/search:
    get:
      tags:
      - "projects-controller"
      summary: "search"
      description: "Search for projects given one or more attributes.\n\n- /search?q=ProjectName\n\
        - /search?q=ApplicationName\n"
      operationId: "searchUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "q"
        required: true
        type: "string"
        x-exportParamName: "Q"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/projects/{projectId}:
    get:
      tags:
      - "projects-controller"
      summary: "project"
      description: "Fetch a single project"
      operationId: "projectUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "projectId"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Project"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    put:
      tags:
      - "projects-controller"
      summary: "put"
      description: "Update an existing project"
      operationId: "putUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "projectId"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "project"
        description: "project"
        required: true
        schema:
          $ref: "#/definitions/Project"
        x-exportParamName: "Project"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Project"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "projects-controller"
      summary: "delete"
      description: "Delete a project"
      operationId: "deleteUsingDELETE_4"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "projectId"
        required: true
        type: "string"
        x-exportParamName: "ProjectId"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /v2/tags:
    get:
      tags:
      - "entity-tags-controller"
      summary: "tags"
      operationId: "tagsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "prefix"
        in: "query"
        description: "prefix"
        required: false
        type: "string"
        x-exportParamName: "Prefix"
      - name: "ids"
        in: "query"
        description: "ids"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Ids"
      - name: "refresh"
        in: "query"
        description: "refresh"
        required: false
        type: "boolean"
        x-exportParamName: "Refresh"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityTags"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "entity-tags-controller"
      summary: "create"
      operationId: "createUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "tag"
        description: "tag"
        required: true
        schema:
          $ref: "#/definitions/EntityTags"
        x-exportParamName: "Tag"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EntityTags"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/tags/**:
    get:
      tags:
      - "entity-tags-controller"
      summary: "tag"
      operationId: "tagUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/EntityTags"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "entity-tags-controller"
      summary: "delete"
      operationId: "deleteUsingDELETE_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /v2/tags/batchDelete:
    post:
      tags:
      - "entity-tags-controller"
      summary: "batchDelete"
      operationId: "batchDeleteUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ids"
        description: "ids"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
        x-exportParamName: "Ids"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/tags/batchUpdate:
    post:
      tags:
      - "entity-tags-controller"
      summary: "batchUpdate"
      operationId: "batchUpdateUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "tags"
        description: "tags"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/EntityTags"
        x-exportParamName: "Tags"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityTags"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
definitions:
  Application:
    type: "object"
    properties:
      createTs:
        type: "string"
      description:
        type: "string"
      email:
        type: "string"
      lastModifiedBy:
        type: "string"
      metaClass:
        $ref: "#/definitions/MetaClass"
      name:
        type: "string"
      updateTs:
        type: "string"
    example:
      metaClass: {}
      lastModifiedBy: "lastModifiedBy"
      name: "name"
      description: "description"
      createTs: "createTs"
      updateTs: "updateTs"
      email: "email"
  ClusterConfig:
    type: "object"
    properties:
      account:
        type: "string"
      applications:
        type: "array"
        items:
          type: "string"
      detail:
        type: "string"
      metaClass:
        $ref: "#/definitions/MetaClass"
      stack:
        type: "string"
    example:
      stack: "stack"
      metaClass: {}
      detail: "detail"
      account: "account"
      applications:
      - "applications"
      - "applications"
  EntityRef:
    type: "object"
    properties:
      entityId:
        type: "string"
      entityType:
        type: "string"
      metaClass:
        $ref: "#/definitions/MetaClass"
    example:
      entityType: "entityType"
      metaClass: {}
      entityId: "entityId"
  EntityTag:
    type: "object"
    properties:
      category:
        type: "string"
      metaClass:
        $ref: "#/definitions/MetaClass"
      name:
        type: "string"
      namespace:
        type: "string"
      value:
        type: "object"
        properties: {}
      valueType:
        type: "string"
    example:
      metaClass: null
      valueType: "valueType"
      name: "name"
      namespace: "namespace"
      category: "category"
      value: "{}"
  EntityTagMetadata:
    type: "object"
    properties:
      created:
        type: "integer"
        format: "int64"
      createdBy:
        type: "string"
      lastModified:
        type: "integer"
        format: "int64"
      lastModifiedBy:
        type: "string"
      metaClass:
        $ref: "#/definitions/MetaClass"
      name:
        type: "string"
    example:
      createdBy: "createdBy"
      created: 6
      metaClass: null
      lastModifiedBy: "lastModifiedBy"
      name: "name"
      lastModified: 1
  EntityTags:
    type: "object"
    properties:
      entityRef:
        $ref: "#/definitions/EntityRef"
      id:
        type: "string"
      idPattern:
        type: "string"
      lastModified:
        type: "integer"
        format: "int64"
      lastModifiedBy:
        type: "string"
      metaClass:
        $ref: "#/definitions/MetaClass"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/EntityTag"
      tagsMetadata:
        type: "array"
        items:
          $ref: "#/definitions/EntityTagMetadata"
      version:
        type: "string"
    example:
      tagsMetadata:
      - createdBy: "createdBy"
        created: 6
        metaClass: null
        lastModifiedBy: "lastModifiedBy"
        name: "name"
        lastModified: 1
      - createdBy: "createdBy"
        created: 6
        metaClass: null
        lastModifiedBy: "lastModifiedBy"
        name: "name"
        lastModified: 1
      metaClass: null
      lastModifiedBy: "lastModifiedBy"
      entityRef:
        entityType: "entityType"
        metaClass: {}
        entityId: "entityId"
      id: "id"
      lastModified: 0
      idPattern: "idPattern"
      version: "version"
      tags:
      - metaClass: null
        valueType: "valueType"
        name: "name"
        namespace: "namespace"
        category: "category"
        value: "{}"
      - metaClass: null
        valueType: "valueType"
        name: "name"
        namespace: "namespace"
        category: "category"
        value: "{}"
  MetaClass:
    type: "object"
  Notification:
    type: "object"
    additionalProperties:
      type: "object"
      properties: {}
  Pipeline:
    type: "object"
    additionalProperties:
      type: "object"
      properties: {}
  PipelineConfig:
    type: "object"
    properties:
      application:
        type: "string"
      metaClass:
        $ref: "#/definitions/MetaClass"
      pipelineConfigId:
        type: "string"
    example:
      pipelineConfigId: "pipelineConfigId"
      application: "application"
      metaClass: null
  Project:
    type: "object"
    properties:
      config:
        $ref: "#/definitions/ProjectConfig"
      createTs:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      id:
        type: "string"
      lastModifiedBy:
        type: "string"
      metaClass:
        $ref: "#/definitions/MetaClass"
      name:
        type: "string"
      updateTs:
        type: "integer"
        format: "int64"
    example:
      metaClass: null
      lastModifiedBy: "lastModifiedBy"
      name: "name"
      createTs: 0
      id: "id"
      config:
        metaClass: null
        clusters:
        - stack: "stack"
          metaClass: {}
          detail: "detail"
          account: "account"
          applications:
          - "applications"
          - "applications"
        - stack: "stack"
          metaClass: {}
          detail: "detail"
          account: "account"
          applications:
          - "applications"
          - "applications"
        pipelineConfigs:
        - pipelineConfigId: "pipelineConfigId"
          application: "application"
          metaClass: null
        - pipelineConfigId: "pipelineConfigId"
          application: "application"
          metaClass: null
        applications:
        - "applications"
        - "applications"
      updateTs: 6
      email: "email"
  ProjectConfig:
    type: "object"
    properties:
      applications:
        type: "array"
        items:
          type: "string"
      clusters:
        type: "array"
        items:
          $ref: "#/definitions/ClusterConfig"
      metaClass:
        $ref: "#/definitions/MetaClass"
      pipelineConfigs:
        type: "array"
        items:
          $ref: "#/definitions/PipelineConfig"
    example:
      metaClass: null
      clusters:
      - stack: "stack"
        metaClass: {}
        detail: "detail"
        account: "account"
        applications:
        - "applications"
        - "applications"
      - stack: "stack"
        metaClass: {}
        detail: "detail"
        account: "account"
        applications:
        - "applications"
        - "applications"
      pipelineConfigs:
      - pipelineConfigId: "pipelineConfigId"
        application: "application"
        metaClass: null
      - pipelineConfigId: "pipelineConfigId"
        application: "application"
        metaClass: null
      applications:
      - "applications"
      - "applications"
